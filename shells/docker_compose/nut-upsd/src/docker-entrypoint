#!/bin/sh -ex

# Generate random passwords if not set
if [ -z "$API_PASSWORD" ]; then
   API_PASSWORD=$(dd if=/dev/urandom bs=18 count=1 2>/dev/null | base64)
fi

if [ -z "$ADMIN_PASSWORD" ]; then
   ADMIN_PASSWORD=$(dd if=/dev/urandom bs=18 count=1 2>/dev/null | base64)
fi

# Configure NUT (Network UPS Tools) files
cat >/etc/nut/ups.conf <<EOF
[$UPS_NAME]
	desc = "$UPS_DESC"
	driver = $UPS_DRIVER
	port = $UPS_PORT
EOF

cat >/etc/nut/upsd.conf <<EOF
LISTEN 0.0.0.0 3493
EOF

cat >/etc/nut/upsd.users <<EOF
[admin]
	password = $ADMIN_PASSWORD
	actions = set
	actions = fsd
	instcmds = all

[monitor]
	password = $API_PASSWORD
	upsmon master
EOF

cat >/etc/nut/upsmon.conf <<EOF
MONITOR $UPS_NAME@localhost 1 monitor $API_PASSWORD master
SHUTDOWNCMD "$SHUTDOWN_CMD"
EOF

# Set permissions
chgrp -R nut /etc/nut /dev/bus/usb
chmod -R o-rwx /etc/nut

# Start UPS services
/usr/sbin/upsdrvctl start
/usr/sbin/upsd
exec /usr/sbin/upsmon -D

# set-docker-entrypoint
if ! grep -q "mirrors.tuna.tsinghua.edu.cn/alpine" /etc/apk/repositories; then
    mv /etc/apk/repositorie /etc/apk/repositorie.bak
   echo "Tuna sources not found, adding them..."
   echo "https://mirrors.tuna.tsinghua.edu.cn/alpine/v3.12/main" >> /etc/apk/repositories
   echo "https://mirrors.tuna.tsinghua.edu.cn/alpine/v3.12/community" >> /etc/apk/repositories
fi

# Update and install Python3 and OpenRC if not already installed
if ! command -v python3 > /dev/null; then
    apk update
    apk add python3
fi

if ! command -v rc-service > /dev/null; then
    apk update
    apk add openrc
fi
chmod +x /home/monitor/main.py
python3 /usr/local/bin/main.py
